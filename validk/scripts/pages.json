[{"name":"abstract val validation: Validation<Value>","description":"io.validk.ValidObject.validation","location":"validk/io.validk/-valid-object/validation.html","searchKeys":["validation","abstract val validation: Validation<Value>","io.validk.ValidObject.validation"]},{"name":"class Constraint<T>(predicate: (T) -> Boolean, errorMessage: (T) -> String)","description":"io.validk.constraints.Constraint","location":"validk/io.validk.constraints/-constraint/index.html","searchKeys":["Constraint","class Constraint<T>(predicate: (T) -> Boolean, errorMessage: (T) -> String)","io.validk.constraints.Constraint"]},{"name":"class Failure<Value>(value: Value, val validationErrors: ValidationErrors) : ValidationResult<Value> ","description":"io.validk.ValidationResult.Failure","location":"validk/io.validk/-validation-result/-failure/index.html","searchKeys":["Failure","class Failure<Value>(value: Value, val validationErrors: ValidationErrors) : ValidationResult<Value> ","io.validk.ValidationResult.Failure"]},{"name":"class ResultMapContext<Value, Result>(success: (Value) -> Result? = null, error: (Value, ValidationErrors) -> Result? = null)","description":"io.validk.ValidationResult.ResultMapContext","location":"validk/io.validk/-validation-result/-result-map-context/index.html","searchKeys":["ResultMapContext","class ResultMapContext<Value, Result>(success: (Value) -> Result? = null, error: (Value, ValidationErrors) -> Result? = null)","io.validk.ValidationResult.ResultMapContext"]},{"name":"class Success<Value>(value: Value) : ValidationResult<Value> ","description":"io.validk.ValidationResult.Success","location":"validk/io.validk/-validation-result/-success/index.html","searchKeys":["Success","class Success<Value>(value: Value) : ValidationResult<Value> ","io.validk.ValidationResult.Success"]},{"name":"class Validation<Value>(propertyPath: String, validatesCollectionElements: Boolean = false, failFast: Boolean = true, nullMessage: String = \"is required\")","description":"io.validk.Validation","location":"validk/io.validk/-validation/index.html","searchKeys":["Validation","class Validation<Value>(propertyPath: String, validatesCollectionElements: Boolean = false, failFast: Boolean = true, nullMessage: String = \"is required\")","io.validk.Validation"]},{"name":"constructor(errorMessage: String, predicate: (T) -> Boolean)","description":"io.validk.constraints.Constraint.Constraint","location":"validk/io.validk.constraints/-constraint/-constraint.html","searchKeys":["Constraint","constructor(errorMessage: String, predicate: (T) -> Boolean)","io.validk.constraints.Constraint.Constraint"]},{"name":"constructor(errors: List<ValidationError>)","description":"io.validk.ValidationErrors.ValidationErrors","location":"validk/io.validk/-validation-errors/-validation-errors.html","searchKeys":["ValidationErrors","constructor(errors: List<ValidationError>)","io.validk.ValidationErrors.ValidationErrors"]},{"name":"constructor(path: String, message: String)","description":"io.validk.ValidationError.ValidationError","location":"validk/io.validk/-validation-error/-validation-error.html","searchKeys":["ValidationError","constructor(path: String, message: String)","io.validk.ValidationError.ValidationError"]},{"name":"constructor(path: String, message: String)","description":"io.validk.ValidationErrors.ValidationErrors","location":"validk/io.validk/-validation-errors/-validation-errors.html","searchKeys":["ValidationErrors","constructor(path: String, message: String)","io.validk.ValidationErrors.ValidationErrors"]},{"name":"constructor(predicate: (T) -> Boolean, errorMessage: (T) -> String)","description":"io.validk.constraints.Constraint.Constraint","location":"validk/io.validk.constraints/-constraint/-constraint.html","searchKeys":["Constraint","constructor(predicate: (T) -> Boolean, errorMessage: (T) -> String)","io.validk.constraints.Constraint.Constraint"]},{"name":"constructor(propertyPath: String, validatesCollectionElements: Boolean = false, failFast: Boolean = true, nullMessage: String = \"is required\")","description":"io.validk.Validation.Validation","location":"validk/io.validk/-validation/-validation.html","searchKeys":["Validation","constructor(propertyPath: String, validatesCollectionElements: Boolean = false, failFast: Boolean = true, nullMessage: String = \"is required\")","io.validk.Validation.Validation"]},{"name":"constructor(success: (Value) -> Result? = null, error: (Value, ValidationErrors) -> Result? = null)","description":"io.validk.ValidationResult.ResultMapContext.ResultMapContext","location":"validk/io.validk/-validation-result/-result-map-context/-result-map-context.html","searchKeys":["ResultMapContext","constructor(success: (Value) -> Result? = null, error: (Value, ValidationErrors) -> Result? = null)","io.validk.ValidationResult.ResultMapContext.ResultMapContext"]},{"name":"constructor(value: Value)","description":"io.validk.ValidationResult.Success.Success","location":"validk/io.validk/-validation-result/-success/-success.html","searchKeys":["Success","constructor(value: Value)","io.validk.ValidationResult.Success.Success"]},{"name":"constructor(value: Value, errors: List<ValidationError>)","description":"io.validk.ValidationResult.Failure.Failure","location":"validk/io.validk/-validation-result/-failure/-failure.html","searchKeys":["Failure","constructor(value: Value, errors: List<ValidationError>)","io.validk.ValidationResult.Failure.Failure"]},{"name":"constructor(value: Value, propertyPath: String, errorMessage: String)","description":"io.validk.ValidationResult.Failure.Failure","location":"validk/io.validk/-validation-result/-failure/-failure.html","searchKeys":["Failure","constructor(value: Value, propertyPath: String, errorMessage: String)","io.validk.ValidationResult.Failure.Failure"]},{"name":"constructor(value: Value, validationErrors: ValidationErrors)","description":"io.validk.ValidationResult.Failure.Failure","location":"validk/io.validk/-validation-result/-failure/-failure.html","searchKeys":["Failure","constructor(value: Value, validationErrors: ValidationErrors)","io.validk.ValidationResult.Failure.Failure"]},{"name":"constructor(value: Value, vararg errors: ValidationError)","description":"io.validk.ValidationResult.Failure.Failure","location":"validk/io.validk/-validation-result/-failure/-failure.html","searchKeys":["Failure","constructor(value: Value, vararg errors: ValidationError)","io.validk.ValidationResult.Failure.Failure"]},{"name":"constructor(vararg errors: ValidationError)","description":"io.validk.ValidationErrors.ValidationErrors","location":"validk/io.validk/-validation-errors/-validation-errors.html","searchKeys":["ValidationErrors","constructor(vararg errors: ValidationError)","io.validk.ValidationErrors.ValidationErrors"]},{"name":"data class ValidationError(val path: String, val message: String)","description":"io.validk.ValidationError","location":"validk/io.validk/-validation-error/index.html","searchKeys":["ValidationError","data class ValidationError(val path: String, val message: String)","io.validk.ValidationError"]},{"name":"data class ValidationErrors(val errors: List<ValidationError>)","description":"io.validk.ValidationErrors","location":"validk/io.validk/-validation-errors/index.html","searchKeys":["ValidationErrors","data class ValidationErrors(val errors: List<ValidationError>)","io.validk.ValidationErrors"]},{"name":"fun <PropertyType> KProperty1<Value, PropertyType>.whenIs(value: PropertyType, block: Validation<Value>.(Value) -> Unit)","description":"io.validk.Validation.whenIs","location":"validk/io.validk/-validation/when-is.html","searchKeys":["whenIs","fun <PropertyType> KProperty1<Value, PropertyType>.whenIs(value: PropertyType, block: Validation<Value>.(Value) -> Unit)","io.validk.Validation.whenIs"]},{"name":"fun <PropertyType> KProperty1<Value, PropertyType?>.notNull(errorMessage: String, block: Validation<PropertyType>.() -> Unit = {})","description":"io.validk.Validation.notNull","location":"validk/io.validk/-validation/not-null.html","searchKeys":["notNull","fun <PropertyType> KProperty1<Value, PropertyType?>.notNull(errorMessage: String, block: Validation<PropertyType>.() -> Unit = {})","io.validk.Validation.notNull"]},{"name":"fun <Result : Any> map(block: ValidationResult.ResultMapContext<Value, Result>.() -> Unit): Result","description":"io.validk.ValidationResult.map","location":"validk/io.validk/-validation-result/map.html","searchKeys":["map","fun <Result : Any> map(block: ValidationResult.ResultMapContext<Value, Result>.() -> Unit): Result","io.validk.ValidationResult.map"]},{"name":"fun <Result : Any> map(success: (Value) -> Result, error: (Value, ValidationErrors) -> Result): Result","description":"io.validk.ValidationResult.map","location":"validk/io.validk/-validation-result/map.html","searchKeys":["map","fun <Result : Any> map(success: (Value) -> Result, error: (Value, ValidationErrors) -> Result): Result","io.validk.ValidationResult.map"]},{"name":"fun KProperty1<Value, String?>.notNullOrBlank(errorMessage: String, block: Validation<String>.() -> Unit? = null)","description":"io.validk.Validation.notNullOrBlank","location":"validk/io.validk/-validation/not-null-or-blank.html","searchKeys":["notNullOrBlank","fun KProperty1<Value, String?>.notNullOrBlank(errorMessage: String, block: Validation<String>.() -> Unit? = null)","io.validk.Validation.notNullOrBlank"]},{"name":"fun Validation<Double>.gt(value: Double): Constraint<Double>","description":"io.validk.constraints.gt","location":"validk/io.validk.constraints/gt.html","searchKeys":["gt","fun Validation<Double>.gt(value: Double): Constraint<Double>","io.validk.constraints.gt"]},{"name":"fun Validation<Double>.gte(value: Double): Constraint<Double>","description":"io.validk.constraints.gte","location":"validk/io.validk.constraints/gte.html","searchKeys":["gte","fun Validation<Double>.gte(value: Double): Constraint<Double>","io.validk.constraints.gte"]},{"name":"fun Validation<Double>.lt(value: Double): Constraint<Double>","description":"io.validk.constraints.lt","location":"validk/io.validk.constraints/lt.html","searchKeys":["lt","fun Validation<Double>.lt(value: Double): Constraint<Double>","io.validk.constraints.lt"]},{"name":"fun Validation<Double>.lte(value: Double): Constraint<Double>","description":"io.validk.constraints.lte","location":"validk/io.validk.constraints/lte.html","searchKeys":["lte","fun Validation<Double>.lte(value: Double): Constraint<Double>","io.validk.constraints.lte"]},{"name":"fun Validation<Float>.gt(value: Float): Constraint<Float>","description":"io.validk.constraints.gt","location":"validk/io.validk.constraints/gt.html","searchKeys":["gt","fun Validation<Float>.gt(value: Float): Constraint<Float>","io.validk.constraints.gt"]},{"name":"fun Validation<Float>.gte(value: Float): Constraint<Float>","description":"io.validk.constraints.gte","location":"validk/io.validk.constraints/gte.html","searchKeys":["gte","fun Validation<Float>.gte(value: Float): Constraint<Float>","io.validk.constraints.gte"]},{"name":"fun Validation<Float>.lt(value: Float): Constraint<Float>","description":"io.validk.constraints.lt","location":"validk/io.validk.constraints/lt.html","searchKeys":["lt","fun Validation<Float>.lt(value: Float): Constraint<Float>","io.validk.constraints.lt"]},{"name":"fun Validation<Float>.lte(value: Float): Constraint<Float>","description":"io.validk.constraints.lte","location":"validk/io.validk.constraints/lte.html","searchKeys":["lte","fun Validation<Float>.lte(value: Float): Constraint<Float>","io.validk.constraints.lte"]},{"name":"fun Validation<Int>.between(range: IntRange): Constraint<Int>","description":"io.validk.constraints.between","location":"validk/io.validk.constraints/between.html","searchKeys":["between","fun Validation<Int>.between(range: IntRange): Constraint<Int>","io.validk.constraints.between"]},{"name":"fun Validation<Int>.gt(value: Int): Constraint<Int>","description":"io.validk.constraints.gt","location":"validk/io.validk.constraints/gt.html","searchKeys":["gt","fun Validation<Int>.gt(value: Int): Constraint<Int>","io.validk.constraints.gt"]},{"name":"fun Validation<Int>.gte(value: Int): Constraint<Int>","description":"io.validk.constraints.gte","location":"validk/io.validk.constraints/gte.html","searchKeys":["gte","fun Validation<Int>.gte(value: Int): Constraint<Int>","io.validk.constraints.gte"]},{"name":"fun Validation<Int>.lt(value: Int): Constraint<Int>","description":"io.validk.constraints.lt","location":"validk/io.validk.constraints/lt.html","searchKeys":["lt","fun Validation<Int>.lt(value: Int): Constraint<Int>","io.validk.constraints.lt"]},{"name":"fun Validation<Int>.lte(value: Int): Constraint<Int>","description":"io.validk.constraints.lte","location":"validk/io.validk.constraints/lte.html","searchKeys":["lte","fun Validation<Int>.lte(value: Int): Constraint<Int>","io.validk.constraints.lte"]},{"name":"fun Validation<Long>.between(range: LongRange): Constraint<Long>","description":"io.validk.constraints.between","location":"validk/io.validk.constraints/between.html","searchKeys":["between","fun Validation<Long>.between(range: LongRange): Constraint<Long>","io.validk.constraints.between"]},{"name":"fun Validation<Long>.gt(value: Long): Constraint<Long>","description":"io.validk.constraints.gt","location":"validk/io.validk.constraints/gt.html","searchKeys":["gt","fun Validation<Long>.gt(value: Long): Constraint<Long>","io.validk.constraints.gt"]},{"name":"fun Validation<Long>.gte(value: Long): Constraint<Long>","description":"io.validk.constraints.gte","location":"validk/io.validk.constraints/gte.html","searchKeys":["gte","fun Validation<Long>.gte(value: Long): Constraint<Long>","io.validk.constraints.gte"]},{"name":"fun Validation<Long>.lt(value: Long): Constraint<Long>","description":"io.validk.constraints.lt","location":"validk/io.validk.constraints/lt.html","searchKeys":["lt","fun Validation<Long>.lt(value: Long): Constraint<Long>","io.validk.constraints.lt"]},{"name":"fun Validation<Long>.lte(value: Long): Constraint<Long>","description":"io.validk.constraints.lte","location":"validk/io.validk.constraints/lte.html","searchKeys":["lte","fun Validation<Long>.lte(value: Long): Constraint<Long>","io.validk.constraints.lte"]},{"name":"fun Validation<Short>.between(range: IntRange): Constraint<Short>","description":"io.validk.constraints.between","location":"validk/io.validk.constraints/between.html","searchKeys":["between","fun Validation<Short>.between(range: IntRange): Constraint<Short>","io.validk.constraints.between"]},{"name":"fun Validation<Short>.gt(value: Short): Constraint<Short>","description":"io.validk.constraints.gt","location":"validk/io.validk.constraints/gt.html","searchKeys":["gt","fun Validation<Short>.gt(value: Short): Constraint<Short>","io.validk.constraints.gt"]},{"name":"fun Validation<Short>.gte(value: Short): Constraint<Short>","description":"io.validk.constraints.gte","location":"validk/io.validk.constraints/gte.html","searchKeys":["gte","fun Validation<Short>.gte(value: Short): Constraint<Short>","io.validk.constraints.gte"]},{"name":"fun Validation<Short>.lt(value: Short): Constraint<Short>","description":"io.validk.constraints.lt","location":"validk/io.validk.constraints/lt.html","searchKeys":["lt","fun Validation<Short>.lt(value: Short): Constraint<Short>","io.validk.constraints.lt"]},{"name":"fun Validation<Short>.lte(value: Long): Constraint<Short>","description":"io.validk.constraints.lte","location":"validk/io.validk.constraints/lte.html","searchKeys":["lte","fun Validation<Short>.lte(value: Long): Constraint<Short>","io.validk.constraints.lte"]},{"name":"fun Validation<String>.email(): Constraint<String>","description":"io.validk.constraints.email","location":"validk/io.validk.constraints/email.html","searchKeys":["email","fun Validation<String>.email(): Constraint<String>","io.validk.constraints.email"]},{"name":"fun Validation<String>.enum(vararg values: String): Constraint<String>","description":"io.validk.constraints.enum","location":"validk/io.validk.constraints/enum.html","searchKeys":["enum","fun Validation<String>.enum(vararg values: String): Constraint<String>","io.validk.constraints.enum"]},{"name":"fun Validation<String>.matches(regex: Regex): Constraint<String>","description":"io.validk.constraints.matches","location":"validk/io.validk.constraints/matches.html","searchKeys":["matches","fun Validation<String>.matches(regex: Regex): Constraint<String>","io.validk.constraints.matches"]},{"name":"fun Validation<String>.matches(regexPattern: String): Constraint<String>","description":"io.validk.constraints.matches","location":"validk/io.validk.constraints/matches.html","searchKeys":["matches","fun Validation<String>.matches(regexPattern: String): Constraint<String>","io.validk.constraints.matches"]},{"name":"fun Validation<String>.maxLength(maxLength: Int): Constraint<String>","description":"io.validk.constraints.maxLength","location":"validk/io.validk.constraints/max-length.html","searchKeys":["maxLength","fun Validation<String>.maxLength(maxLength: Int): Constraint<String>","io.validk.constraints.maxLength"]},{"name":"fun Validation<String>.minLength(minLength: Int): Constraint<String>","description":"io.validk.constraints.minLength","location":"validk/io.validk.constraints/min-length.html","searchKeys":["minLength","fun Validation<String>.minLength(minLength: Int): Constraint<String>","io.validk.constraints.minLength"]},{"name":"fun Validation<String>.notBlank(): Constraint<String>","description":"io.validk.constraints.notBlank","location":"validk/io.validk.constraints/not-blank.html","searchKeys":["notBlank","fun Validation<String>.notBlank(): Constraint<String>","io.validk.constraints.notBlank"]},{"name":"fun Validation<String>.notEmpty(): Constraint<String>","description":"io.validk.constraints.notEmpty","location":"validk/io.validk.constraints/not-empty.html","searchKeys":["notEmpty","fun Validation<String>.notEmpty(): Constraint<String>","io.validk.constraints.notEmpty"]},{"name":"fun Validation<out Collection<*>>.maxSize(maxSize: Int): Constraint<out Collection<*>>","description":"io.validk.constraints.maxSize","location":"validk/io.validk.constraints/max-size.html","searchKeys":["maxSize","fun Validation<out Collection<*>>.maxSize(maxSize: Int): Constraint<out Collection<*>>","io.validk.constraints.maxSize"]},{"name":"fun Validation<out Collection<*>>.minSize(minSize: Int): Constraint<out Collection<*>>","description":"io.validk.constraints.minSize","location":"validk/io.validk.constraints/min-size.html","searchKeys":["minSize","fun Validation<out Collection<*>>.minSize(minSize: Int): Constraint<out Collection<*>>","io.validk.constraints.minSize"]},{"name":"fun Validation<out Collection<*>>.notEmpty(): Constraint<out Collection<*>>","description":"io.validk.constraints.notEmpty","location":"validk/io.validk.constraints/not-empty.html","searchKeys":["notEmpty","fun Validation<out Collection<*>>.notEmpty(): Constraint<out Collection<*>>","io.validk.constraints.notEmpty"]},{"name":"fun addConstraint(errorMessage: String, predicate: (Value) -> Boolean): Constraint<Value>","description":"io.validk.Validation.addConstraint","location":"validk/io.validk/-validation/add-constraint.html","searchKeys":["addConstraint","fun addConstraint(errorMessage: String, predicate: (Value) -> Boolean): Constraint<Value>","io.validk.Validation.addConstraint"]},{"name":"fun error(onError: (Value, ValidationErrors) -> Result)","description":"io.validk.ValidationResult.ResultMapContext.error","location":"validk/io.validk/-validation-result/-result-map-context/error.html","searchKeys":["error","fun error(onError: (Value, ValidationErrors) -> Result)","io.validk.ValidationResult.ResultMapContext.error"]},{"name":"fun error(path: String): String?","description":"io.validk.ValidationErrors.error","location":"validk/io.validk/-validation-errors/error.html","searchKeys":["error","fun error(path: String): String?","io.validk.ValidationErrors.error"]},{"name":"fun errors(path: String): List<String>","description":"io.validk.ValidationErrors.errors","location":"validk/io.validk/-validation-errors/errors.html","searchKeys":["errors","fun errors(path: String): List<String>","io.validk.ValidationErrors.errors"]},{"name":"fun failFast(failFast: Boolean)","description":"io.validk.Validation.failFast","location":"validk/io.validk/-validation/fail-fast.html","searchKeys":["failFast","fun failFast(failFast: Boolean)","io.validk.Validation.failFast"]},{"name":"fun hasErrors(propertyPath: String): Boolean","description":"io.validk.ValidationErrors.hasErrors","location":"validk/io.validk/-validation-errors/has-errors.html","searchKeys":["hasErrors","fun hasErrors(propertyPath: String): Boolean","io.validk.ValidationErrors.hasErrors"]},{"name":"fun ifFailed(block: (ValidationErrors) -> Unit)","description":"io.validk.ValidationResult.ifFailed","location":"validk/io.validk/-validation-result/if-failed.html","searchKeys":["ifFailed","fun ifFailed(block: (ValidationErrors) -> Unit)","io.validk.ValidationResult.ifFailed"]},{"name":"fun success(onSuccess: (Value) -> Result)","description":"io.validk.ValidationResult.ResultMapContext.success","location":"validk/io.validk/-validation-result/-result-map-context/success.html","searchKeys":["success","fun success(onSuccess: (Value) -> Result)","io.validk.ValidationResult.ResultMapContext.success"]},{"name":"fun validate(value: Value): ValidationResult<Value>","description":"io.validk.Validation.validate","location":"validk/io.validk/-validation/validate.html","searchKeys":["validate","fun validate(value: Value): ValidationResult<Value>","io.validk.Validation.validate"]},{"name":"fun withValue(block: Validation<Value>.(Value) -> Unit)","description":"io.validk.Validation.withValue","location":"validk/io.validk/-validation/with-value.html","searchKeys":["withValue","fun withValue(block: Validation<Value>.(Value) -> Unit)","io.validk.Validation.withValue"]},{"name":"infix fun <ElementType, CollectionType : Collection<ElementType>> KProperty1<Value, CollectionType>.each(block: Validation<ElementType>.() -> Unit)","description":"io.validk.Validation.each","location":"validk/io.validk/-validation/each.html","searchKeys":["each","infix fun <ElementType, CollectionType : Collection<ElementType>> KProperty1<Value, CollectionType>.each(block: Validation<ElementType>.() -> Unit)","io.validk.Validation.each"]},{"name":"infix fun <PropertyType> KProperty1<Value, PropertyType?>.ifNotNull(block: Validation<PropertyType>.() -> Unit)","description":"io.validk.Validation.ifNotNull","location":"validk/io.validk/-validation/if-not-null.html","searchKeys":["ifNotNull","infix fun <PropertyType> KProperty1<Value, PropertyType?>.ifNotNull(block: Validation<PropertyType>.() -> Unit)","io.validk.Validation.ifNotNull"]},{"name":"infix fun message(message: (T) -> String): Constraint<T>","description":"io.validk.constraints.Constraint.message","location":"validk/io.validk.constraints/-constraint/message.html","searchKeys":["message","infix fun message(message: (T) -> String): Constraint<T>","io.validk.constraints.Constraint.message"]},{"name":"infix fun message(message: String): Constraint<T>","description":"io.validk.constraints.Constraint.message","location":"validk/io.validk.constraints/-constraint/message.html","searchKeys":["message","infix fun message(message: String): Constraint<T>","io.validk.constraints.Constraint.message"]},{"name":"inline fun <T : Enum<T>> Validation<String>.enum(): Constraint<String>","description":"io.validk.constraints.enum","location":"validk/io.validk.constraints/enum.html","searchKeys":["enum","inline fun <T : Enum<T>> Validation<String>.enum(): Constraint<String>","io.validk.constraints.enum"]},{"name":"interface ValidObject<Value>","description":"io.validk.ValidObject","location":"validk/io.validk/-valid-object/index.html","searchKeys":["ValidObject","interface ValidObject<Value>","io.validk.ValidObject"]},{"name":"object Companion","description":"io.validk.Validation.Companion","location":"validk/io.validk/-validation/-companion/index.html","searchKeys":["Companion","object Companion","io.validk.Validation.Companion"]},{"name":"object Companion","description":"io.validk.ValidationError.Companion","location":"validk/io.validk/-validation-error/-companion/index.html","searchKeys":["Companion","object Companion","io.validk.ValidationError.Companion"]},{"name":"open fun validate(): ValidationResult<Value>","description":"io.validk.ValidObject.validate","location":"validk/io.validk/-valid-object/validate.html","searchKeys":["validate","open fun validate(): ValidationResult<Value>","io.validk.ValidObject.validate"]},{"name":"operator fun <PropertyType> KProperty1<Value, PropertyType>.invoke(init: Validation<PropertyType>.() -> Unit)","description":"io.validk.Validation.invoke","location":"validk/io.validk/-validation/invoke.html","searchKeys":["invoke","operator fun <PropertyType> KProperty1<Value, PropertyType>.invoke(init: Validation<PropertyType>.() -> Unit)","io.validk.Validation.invoke"]},{"name":"operator fun <Value> invoke(propertyPath: String = \"\", init: Validation<Value>.() -> Unit): Validation<Value>","description":"io.validk.Validation.Companion.invoke","location":"validk/io.validk/-validation/-companion/invoke.html","searchKeys":["invoke","operator fun <Value> invoke(propertyPath: String = \"\", init: Validation<Value>.() -> Unit): Validation<Value>","io.validk.Validation.Companion.invoke"]},{"name":"sealed class ValidationResult<Value>","description":"io.validk.ValidationResult","location":"validk/io.validk/-validation-result/index.html","searchKeys":["ValidationResult","sealed class ValidationResult<Value>","io.validk.ValidationResult"]},{"name":"val allErrors: List<ValidationError>","description":"io.validk.ValidationResult.Failure.allErrors","location":"validk/io.validk/-validation-result/-failure/all-errors.html","searchKeys":["allErrors","val allErrors: List<ValidationError>","io.validk.ValidationResult.Failure.allErrors"]},{"name":"val errors: List<ValidationError>","description":"io.validk.ValidationErrors.errors","location":"validk/io.validk/-validation-errors/errors.html","searchKeys":["errors","val errors: List<ValidationError>","io.validk.ValidationErrors.errors"]},{"name":"val errorsByPath: Map<String, List<String>>","description":"io.validk.ValidationErrors.errorsByPath","location":"validk/io.validk/-validation-errors/errors-by-path.html","searchKeys":["errorsByPath","val errorsByPath: Map<String, List<String>>","io.validk.ValidationErrors.errorsByPath"]},{"name":"val failedProperties: Set<String>","description":"io.validk.ValidationErrors.failedProperties","location":"validk/io.validk/-validation-errors/failed-properties.html","searchKeys":["failedProperties","val failedProperties: Set<String>","io.validk.ValidationErrors.failedProperties"]},{"name":"val message: String","description":"io.validk.ValidationError.message","location":"validk/io.validk/-validation-error/message.html","searchKeys":["message","val message: String","io.validk.ValidationError.message"]},{"name":"val path: String","description":"io.validk.ValidationError.path","location":"validk/io.validk/-validation-error/path.html","searchKeys":["path","val path: String","io.validk.ValidationError.path"]},{"name":"val validationErrors: ValidationErrors","description":"io.validk.ValidationResult.Failure.validationErrors","location":"validk/io.validk/-validation-result/-failure/validation-errors.html","searchKeys":["validationErrors","val validationErrors: ValidationErrors","io.validk.ValidationResult.Failure.validationErrors"]},{"name":"val value: Value","description":"io.validk.ValidationResult.value","location":"validk/io.validk/-validation-result/value.html","searchKeys":["value","val value: Value","io.validk.ValidationResult.value"]}]